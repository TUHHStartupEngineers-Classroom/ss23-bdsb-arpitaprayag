{
  "hash": "0b1a055c48c6d107ee2d87eef85fcaac",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Arpita Anand Prayag\"\nMatriculation number: \"564621\"\nformat: html\neditor: visual\n---\n\n\n# Data Visualising Challenge\n\n## Running Code\n\n### Load libraries\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_dd67dc4afca6888bd98f0f746b616096'}\n\n```{.r .cell-code}\n# Lollipop Chart: Top N Customers ----\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggrepel)\nlibrary(scales)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'scales'\n#> \n#> The following object is masked from 'package:purrr':\n#> \n#>     discard\n#> \n#> The following object is masked from 'package:readr':\n#> \n#>     col_factor\n```\n:::\n\n```{.r .cell-code}\nlibrary(maps)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'maps'\n#> \n#> The following object is masked from 'package:purrr':\n#> \n#>     map\n```\n:::\n:::\n\n\n## Challenge 1 - Goal: Map the time course of the cumulative Covid-19 cases!\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_4b5b79825ac6cd1427a631a8753fdfc6'}\n\n```{.r .cell-code}\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 313070 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n### Filter the data\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-3_d23470a56687029cecf5ae73a66764d4'}\n\n```{.r .cell-code}\nselected_countries <- c(\"Spain\", \"United States\", \"United Kingdom\", \"France\", \"Germany\")\n\nfiltered_data <- covid_data_tbl %>%\n  filter(location %in% selected_countries) %>%\n  mutate(date = as.Date(date))\n\n\ncumulative_cases <- filtered_data %>%\n  group_by(location) %>%\n  mutate(cumulative_cases_millions = total_cases / 1e6)\n```\n:::\n\n\n### Create the line plot with the cumulative cases over time\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-4_794d6b193e8b64d758348c9d6fd86fa4'}\n\n```{.r .cell-code}\nggplot(cumulative_cases, aes(x = date, y = cumulative_cases_millions, color = location)) +\n  geom_line(size = 1) +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 month\") +\n  scale_y_continuous(labels = scales::comma) +\n  labs(title = \"COVID-19 cases worldwide\",\n       x = \"Month and Year\",\n       y = \"Cumulative Cases (Millions)\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        legend.position = \"bottom\",\n        axis.text.x = element_text(angle = 45, hjust = 1)) +\n  geom_label_repel(data = filter(cumulative_cases, date == max(date)),\n                   aes(label = paste(location, scales::comma(cumulative_cases_millions), sep = \" - \")),\n                   nudge_x = 10,\n                   direction = \"y\",\n                   color = \"black\",\n                   size = 3,\n                   box.padding = 0.5,\n                   box.margin = 0.5,\n                   segment.color = \"black\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in geom_label_repel(data = filter(cumulative_cases, date == max(date)),\n#> : Ignoring unknown parameters: `box.margin`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Removed 76 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Challenge 2\n\n## Visualize the distribution of the mortality rate (deaths / population)\n\n### Read the data and adjust country names\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-5_86118bc0308c33d5101ce4297928cbee'}\n\n```{.r .cell-code}\nworld <- map_data(\"world\")\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 313070 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nadjusted_data <- covid_data_tbl %>% \n  mutate(location = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n  )) %>%\n  distinct()\n```\n:::\n\n\n### Group the adjusted data by location and keep the latest entry for each location\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-6_3ea8e4be37d10827a2bdd27a73d3c447'}\n\n```{.r .cell-code}\nadjusted_data_latest <- adjusted_data %>%\n  group_by(location) %>%\n  slice_max(date, n = 1) %>%\n  ungroup()\n```\n:::\n\n\n### Join the latitude/longitude data with the COVID-19 data\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-7_16e564931be32ad58748b9b3ea0b5f7d'}\n\n```{.r .cell-code}\nplot_data <- left_join(world, adjusted_data_latest, by = c(\"region\" = \"location\"))\n```\n:::\n\n\n### Visualize the distribution of the mortality rate or case-fatality rate\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-8_6860bfe59a999628cb7a6e5109da3afa'}\n\n```{.r .cell-code}\nggplot() +\n  geom_polygon(data = plot_data, aes(x = long, y = lat, group = group, fill = total_deaths / population), color = \"black\") +\n  scale_fill_gradient(low = \"red\", high = \"black\", na.value = \"gray\", guide = \"legend\") +\n  labs(fill = \"Mortality Rate\") +\n  ggtitle(\"Distribution of Mortality Rate\") +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}